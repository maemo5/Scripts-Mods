/*%FSM<COMPILE "D:\SteamLibrary\steamapps\common\Arma 3 Tools\FSMEditor\scriptedFSM.cfg, main.fsm">*/
/*%FSM<HEAD>*/
/*
item0[] = {"Start",0,250,775.000000,-50.000000,875.000000,0.000000,0.000000,"Start"};
item1[] = {"Continue",8,218,775.000000,25.000000,875.000000,75.000000,0.000000,"Continue"};
item2[] = {"Wait",2,250,775.000000,100.000000,875.000000,150.000000,0.000000,"Wait"};
item3[] = {"Ground_Weapon_Ho",4,218,650.000000,100.000000,750.000000,150.000000,0.000000,"Ground" \n "Weapon" \n "Holder"};
item4[] = {"Weapon_Holder_Si",4,218,650.000000,175.000000,750.000000,225.000000,0.000000,"Weapon" \n "Holder" \n "Simulated"};
item5[] = {"Loot",4,4314,775.000000,175.000000,875.000000,225.000000,0.000000,"Loot"};
item6[] = {"Groups",4,218,900.000000,175.000000,1000.000000,225.000000,0.000000,"Groups"};
item7[] = {"All_Dead",4,218,900.000000,100.000000,1000.000000,150.000000,0.000000,"All" \n "Dead"};
link0[] = {0,1};
link1[] = {1,2};
link2[] = {2,3};
link3[] = {2,4};
link4[] = {2,5};
link5[] = {2,6};
link6[] = {2,7};
link7[] = {3,2};
link8[] = {4,2};
link9[] = {5,2};
link10[] = {6,2};
link11[] = {7,2};
globals[] = {0.000000,0,0,0,0,640,480,1,455,6316128,1,507.138519,1104.597778,441.719635,-113.631027,979,884,1};
window[] = {2,-1,-1,-1,-1,916,182,1476,182,3,997};
*//*%FSM</HEAD>*/
class FSM
{
        fsmName = "main.fsm";
        class States
        {
                /*%FSM<STATE "Start">*/
                class Start
                {
                        name = "Start";
                        itemno = 0;
                        init = /*%FSM<STATEINIT""">*/"_groundWeaponHolderInterval = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""GroundWeaponHolder"" >> ""interval"");" \n
                         "_groundWeaponHolderLastTick = diag_tickTime;" \n
                         "_groundWeaponHolderLifeTime = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""GroundWeaponHolder"" >> ""lifeTime"");" \n
                         "" \n
                         "_weaponHolderSimulatedInterval = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""WeaponHolderSimulated"" >> ""interval"");" \n
                         "_weaponHolderSimulatedLastTick = diag_tickTime;" \n
                         "_weaponHolderLifeTime = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""WeaponHolderSimulated"" >> ""lifeTime"");" \n
                         "" \n
                         "_allDeadInterval = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""AllDead"" >> ""interval"");" \n
                         "_allDeadLastTick = diag_tickTime;" \n
                         "_allDeadLifeTime = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""AllDead"" >> ""lifeTime"");" \n
                         "" \n
                         "_lootInterval = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""Loot"" >> ""interval"");" \n
                         "_lootLastTick = diag_tickTime;" \n
                         "_lootLifeTime = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""Loot"" >> ""lifeTime"");" \n
                         "" \n
                         "_groupsInterval = 60 * getNumber (configFile >> ""CfgSettings"" >> ""GarbageCollector"" >> ""Ingame"" >> ""Groups"" >> ""interval"");" \n
                         "_groupsLastTick = diag_tickTime;"/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Continue">*/
                                class Continue
                                {
                                        itemno = 1;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
                /*%FSM<STATE "Wait">*/
                class Wait
                {
                        name = "Wait";
                        itemno = 2;
                        init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
                        precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
                        class Links
                        {
                                /*%FSM<LINK "Weapon_Holder_Si">*/
                                class Weapon_Holder_Si
                                {
                                        itemno = 4;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(diag_ticktime - _weaponHolderSimulatedLastTick) >=_weaponHolderSimulatedInterval"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_weaponHolderSimulatedLastTick = diag_tickTime;" \n
                                         "" \n
                                         "//call ExileServer_system_garbageCollector_unscheduled_deleteWeaponHolderSimulated;" \n
                                         "" \n
                                         "" \n
                                         "{" \n
                                         "	_diedAt = _x getVariable [""ExileDiedAt"", -1];" \n
                                         "	if (_diedAt isEqualTo -1) then " \n
                                         "	{" \n
                                         "		_x setVariable [""ExileDiedAt"", time];" \n
                                         "	}" \n
                                         "	else " \n
                                         "	{" \n
                                         "		if ((time - _diedAt) >= _weaponHolderLifeTime) then" \n
                                         "		{" \n
                                         "			deleteVehicle _x;" \n
                                         "		};" \n
                                         "	};" \n
                                         "}" \n
                                         "forEach (allMissionObjects ""WeaponHolderSimulated"");"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Loot">*/
                                class Loot
                                {
                                        itemno = 5;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(diag_ticktime - _lootLastTick) >=_lootInterval"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_lootLastTick = diag_tickTime;" \n
                                         "" \n
                                         "//call ExileServer_system_garbageCollector_unscheduled_deleteLoot;" \n
                                         "" \n
                                         "_index = - 1;" \n
                                         "{" \n
                                         "	_building = _x;" \n
                                         "	if ((time - (_building getVariable [""ExileLootSpawnedAt"", 0])) < _lootLifeTime) exitWith {};" \n
                                         "" \n
                                         "	_lootWeaponHolders = _building getVariable [""ExileLootWeaponHolders"", []];" \n
                                         "	{" \n
                                         "		if !(isNull _x) then" \n
                                         "		{" \n
                                         "			deleteVehicle _x;" \n
                                         "		};" \n
                                         "	}" \n
                                         "	forEach _lootWeaponHolders;" \n
                                         "	_building setVariable [""ExileLootSpawnedAt"", nil];" \n
                                         "	_building setVariable [""ExileHasLoot"", false];" \n
                                         "	_building setVariable [""ExileLootWeaponHolders"", []];" \n
                                         "	_index = _forEachIndex;" \n
                                         "}" \n
                                         "forEach ExileServerBuildingsWithLoot;" \n
                                         "" \n
                                         "" \n
                                         "ExileServerBuildingsWithLoot deleteRange [0,(_index + 1)];"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Groups">*/
                                class Groups
                                {
                                        itemno = 6;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(diag_ticktime - _groupsLastTick) >=_groupsInterval"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_groupsLastTick = diag_tickTime;" \n
                                         "" \n
                                         "//call ExileServer_system_garbageCollector_unscheduled_deleteGroups;" \n
                                         "" \n
                                         "{" \n
                                         "	if !(_x isEqualTo ExileGraveyardGroup) then" \n
                                         "	{" \n
                                         "		_units = units _x;" \n
                                         "		if ((count _units) isEqualTo 0) then" \n
                                         "		{" \n
                                         "			if (local _x) then" \n
                                         "			{" \n
                                         "				deleteGroup _x;" \n
                                         "			}" \n
                                         "			else" \n
                                         "			{" \n
                                         "				[groupOwner _x, ""DeleteGroupPlz"", [_x]] call ExileServer_system_network_send_to;" \n
                                         "			};" \n
                                         "		};" \n
                                         "	};" \n
                                         "}" \n
                                         "forEach allGroups;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "All_Dead">*/
                                class All_Dead
                                {
                                        itemno = 7;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(diag_ticktime - _allDeadLastTick) >=_allDeadInterval"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_allDeadLastTick = diag_tickTime;" \n
                                         "" \n
                                         "//call ExileServer_system_garbageCollector_unscheduled_deleteAllDead;" \n
                                         "" \n
                                         "{" \n
                                         "	_diedAt = _x getVariable [""ExileDiedAt"", -1];" \n
                                         "	if (_diedAt isEqualTo -1) then " \n
                                         "	{" \n
                                         "		_x setVariable [""ExileDiedAt"", time];" \n
                                         "	}" \n
                                         "	else " \n
                                         "	{" \n
                                         "		if ((time - _diedAt) >= _allDeadLifeTime) then" \n
                                         "		{" \n
                                         "			_x call ExileServer_system_garbageCollector_deleteObject;" \n
                                         "		};" \n
                                         "	};" \n
                                         "} forEach allDead;"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                                /*%FSM<LINK "Ground_Weapon_Ho">*/
                                class Ground_Weapon_Ho
                                {
                                        itemno = 3;
                                        priority = 0.000000;
                                        to="Wait";
                                        precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
                                        condition=/*%FSM<CONDITION""">*/"(diag_ticktime - _groundWeaponHolderLastTick) >=_groundWeaponHolderInterval"/*%FSM</CONDITION""">*/;
                                        action=/*%FSM<ACTION""">*/"_groundWeaponHolderLastTick = diag_tickTime;" \n
                                         "" \n
                                         "//call ExileServer_system_garbageCollector_unscheduled_deleteGroundWeaponHolders;" \n
                                         "" \n
                                         "{" \n
                                         "	_diedAt = _x getVariable [""ExileDiedAt"", -1];" \n
                                         "	if (_diedAt isEqualTo -1) then " \n
                                         "	{" \n
                                         "		_x setVariable [""ExileDiedAt"", time];" \n
                                         "	}" \n
                                         "	else " \n
                                         "	{" \n
                                         "		if ((time - _diedAt) >= _groundWeaponHolderLifeTime) then" \n
                                         "		{" \n
                                         "			deleteVehicle _x;" \n
                                         "		};" \n
                                         "	};" \n
                                         "}" \n
                                         "forEach (allMissionObjects ""GroundWeaponHolder"");"/*%FSM</ACTION""">*/;
                                };
                                /*%FSM</LINK>*/
                        };
                };
                /*%FSM</STATE>*/
        };
        initState="Start";
        finalStates[] =
        {
        };
};
/*%FSM</COMPILE>*/